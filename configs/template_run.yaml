class:
    dataset: ['TextDataset', 'GraphDataset']
    model: ['DevignForSequence', 'ReGVD']
    optimizer: str          # ClassName in `torch.optim`
dataset:
    # Format 1, `validate_split` must be filled in.
    file_path: str
    # Format 2, best to left `validate_split` as the default.
    file_path:
        train: str
        eval: str
    file_type: ['json', 'draper']
    validate_split: <optional> float [>0.0, <1.0]
    # If `file_type` == 'json', then
    code_field: str
    label_field: str
model:
    transformer:                # Optional
        model_name_or_path: str
        config_name: <optional> str
        tokenizer_name: <optional> str
        do_lower_case: <optional> [True, False]
        bits: <optional> [4, 8]
    kwargs...: ...
optimizer:
    lr_scheduler:               # Optional
        type: ['linear', 'cosine', 'polymonial', 'constant', 'inverse_sqrt']
        kwargs...: ...
    kwargs...: ...
runner:
    output_dir: <optional> str
    train_batch_size: int
    eval_batch_size: int
    num_train_epochs: int
    save_steps: <optional> int
    logging_steps: <optional> int
    max_grad_norm: <optional> float
seed: <optional> int
