class:
    dataset: ClassName          # in `./dataloaders/__init__.py`
    model: ClassName            # in `./models/__init__.py`
    optimizer: ClassName        # in `torch.optim`
dataset:
    file_path: str
    file_type: ['json', 'draper']
    code_tag: <optional>
    label_tag: <optional>
    validate_split: <optional> float [>0.0, <1.0]
model:
    transformer:                # Optional
        model_name_or_path: str
        config_name: <optional> str
        tokenizer_name: <optional> str
        do_lower_case: <optional> [True, False]
        bits: <optional> [4, 8]
    kwargs: ...
optimizer:
    lr_scheduler:               # Optional
        type: ['linear', 'cosine', 'polymonial', 'constant', 'inverse_sqrt']
        kwargs: ...
    kwargs: ...
runner:
    train_batch_size: int
    eval_batch_size: int
    epochs: int
    kwargs: ...
seed: <optional> int
