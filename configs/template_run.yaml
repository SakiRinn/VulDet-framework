class:
    dataset: ['TextDataset', 'GraphDataset']
    model: ['DevignForSequence', 'ReGVD']
    optimizer: str              # ClassName in `torch.optim`
dataset:
    # Format 1
    file_path:
        train: str
        test: str
    # Format 2
    file_path: str
    test_split: float [>0.0, <1.0]
    # other kwargs
    data_format: ['json', 'csv']
    code_field: str
    label_field: str
    type_field: <optional> str
model:
    transformer:                # Optional
        model_name_or_path: str
        config_name: <optional> str
        tokenizer_name: <optional> str
        do_lower_case: <optional> [True, False]
        quantization_bits: <optional> [4, 8]
        add_special_tokens: <optional> [True, False]
        custom_tokens: <optional> list
    kwargs...: ...
optimizer:
    lr_scheduler:               # Optional
        type: ['linear', 'cosine', 'polymonial', 'constant', 'inverse_sqrt']
        kwargs...: ...
    kwargs...: ...
runner:
    train_batch_size: int
    eval_batch_size: int
    num_train_epochs: int
    save_steps: <optional> int
    logging_steps: <optional> int
    max_grad_norm: <optional> float
seed: <optional> int
